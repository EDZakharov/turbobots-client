const DEFAULT_SIZES = '20px';
const DEFAULT_FILL = 'white';

export function QuestionSvg(props: any, className: any, fill?: any) {
    return (
        <svg
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 24 24"
            fill={fill}
            className={className}
            {...props}
        >
            <path d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12zm11.378-3.917c-.89-.777-2.366-.777-3.255 0a.75.75 0 01-.988-1.129c1.454-1.272 3.776-1.272 5.23 0 1.513 1.324 1.513 3.518 0 4.842a3.75 3.75 0 01-.837.552c-.676.328-1.028.774-1.028 1.152v.75a.75.75 0 01-1.5 0v-.75c0-1.279 1.06-2.107 1.875-2.502a2.28 2.28 0 00.503-.331c.83-.727.83-1.857 0-2.584zM12 18a.75.75 0 100-1.5.75.75 0 000 1.5z" />
        </svg>
    );
}

export function ExitSvg({ size = DEFAULT_SIZES, color = DEFAULT_FILL }) {
    return (
        <svg
            xmlns="http://www.w3.org/2000/svg"
            width={size}
            height={size}
            fill={color}
            viewBox="0 0 16 16"
        >
            <path
                fillRule="evenodd"
                d="M6 12.5a.5.5 0 0 0 .5.5h8a.5.5 0 0 0 .5-.5v-9a.5.5 0 0 0-.5-.5h-8a.5.5 0 0 0-.5.5v2a.5.5 0 0 1-1 0v-2A1.5 1.5 0 0 1 6.5 2h8A1.5 1.5 0 0 1 16 3.5v9a1.5 1.5 0 0 1-1.5 1.5h-8A1.5 1.5 0 0 1 5 12.5v-2a.5.5 0 0 1 1 0z"
            />
            <path
                fillRule="evenodd"
                d="M.146 8.354a.5.5 0 0 1 0-.708l3-3a.5.5 0 1 1 .708.708L1.707 7.5H10.5a.5.5 0 0 1 0 1H1.707l2.147 2.146a.5.5 0 0 1-.708.708z"
            />
        </svg>
    );
}

export function DoubleArrowsSvg({
    size = DEFAULT_SIZES,
    color = DEFAULT_FILL,
    className = '',
}) {
    return (
        <svg
            xmlns="http://www.w3.org/2000/svg"
            width={size}
            height={size}
            fill={color}
            className={className}
            viewBox="0 0 16 16"
        >
            <path
                fillRule="evenodd"
                d="M8.354 1.646a.5.5 0 0 1 0 .708L2.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0"
            />
            <path
                fillRule="evenodd"
                d="M12.354 1.646a.5.5 0 0 1 0 .708L6.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0"
            />
        </svg>
    );
}

export function PlusSvg({
    size = DEFAULT_SIZES,
    color = DEFAULT_FILL,
    className = '',
}) {
    return (
        <svg
            xmlns="http://www.w3.org/2000/svg"
            width={size}
            height={size}
            fill={color}
            className={className}
            viewBox="0 0 16 16"
        >
            <path
                fillRule="evenodd"
                d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2"
            />
        </svg>
    );
}

export function EditSvg({
    size = DEFAULT_SIZES,
    color = DEFAULT_FILL,
    className = '',
}) {
    return (
        <>
            <svg
                xmlns="http://www.w3.org/2000/svg"
                width={size}
                height={size}
                fill={color}
                className={className}
                viewBox="0 0 16 16"
            >
                <path d="M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z" />
                <path
                    fillRule="evenodd"
                    d="M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5z"
                />
            </svg>
        </>
    );
}

export function SpinSvg({ size = DEFAULT_SIZES, color = DEFAULT_FILL }) {
    return (
        <svg
            xmlns="http://www.w3.org/2000/svg"
            width={size}
            height={size}
            fill={color}
            className=" animate-spin"
            viewBox="0 0 16 16"
        >
            <path
                fillRule="evenodd"
                d="M8 3a5 5 0 1 0 4.546 2.914.5.5 0 0 1 .908-.417A6 6 0 1 1 8 2z"
            />
            <path d="M8 4.466V.534a.25.25 0 0 1 .41-.192l2.36 1.966c.12.1.12.284 0 .384L8.41 4.658A.25.25 0 0 1 8 4.466" />
        </svg>
    );
}

export function HomeSvg({ size = DEFAULT_SIZES, color = DEFAULT_FILL }) {
    return (
        <svg
            xmlns="http://www.w3.org/2000/svg"
            stroke={color}
            viewBox="0 0 24 24"
            strokeWidth="1.5"
            width={size}
            height={size}
        >
            <path
                strokeLinecap="round"
                strokeLinejoin="round"
                d="m2.25 12 8.954-8.955c.44-.439 1.152-.439 1.591 0L21.75 12M4.5 9.75v10.125c0 .621.504 1.125 1.125 1.125H9.75v-4.875c0-.621.504-1.125 1.125-1.125h2.25c.621 0 1.125.504 1.125 1.125V21h4.125c.621 0 1.125-.504 1.125-1.125V9.75M8.25 21h8.25"
            />
        </svg>
    );
}

export function LogoSvgAnimated({ size = '40px', color = DEFAULT_FILL }) {
    return (
        <svg
            viewBox="0 0 200 200"
            xmlns="http://www.w3.org/2000/svg"
            width={size}
            height={size}
        >
            <path
                vectorEffect={'non-scaling-stroke'}
                strokeWidth="0"
                strokeOpacity={'0.26'}
                strokeLinejoin="round"
                stroke="rgb(0, 0, 0)"
                fill="rgb(243, 186, 47)"
                fillRule="evenodd"
                paintOrder={'stroke'}
                d="M 714.585 144.388 C 711.939 149.679 712.841 158.275 709.141 161.975 C 707.676 163.441 708.932 167.629 707.466 169.094 C 705.373 171.188 706.629 176.632 704.535 178.726 C 702.232 181.029 703.069 186.473 700.766 188.776 C 698.254 191.289 699.929 197.989 697.416 200.501 C 695.91 202.007 697.838 206.779 696.16 208.458 C 692.69 211.928 694.364 220.304 690.716 223.952 C 688.901 225.767 690.437 230.931 688.622 232.746 C 683.737 237.632 685.132 248.799 680.247 253.684 C 678.711 255.219 679.689 259.268 678.153 260.803 C 673.011 265.945 674.823 278.371 669.778 283.416 C 668.438 284.756 671.261 286.156 671.453 286.347 C 672.449 287.343 677.219 286.766 678.991 286.766 C 685.97 286.766 692.949 286.766 699.929 286.766 C 720.685 286.766 740.691 290.535 762.743 290.535 C 766.678 290.535 771.639 290.954 774.887 290.954 C 776.452 290.954 779.499 290.541 780.331 291.372 C 781.587 292.629 786.193 290.535 787.45 291.791 C 788.658 293 793.397 290.996 794.987 291.791 C 799.35 293.972 808.665 293.048 813.413 293.048 C 814.563 293.048 821.369 293.466 821.369 293.466 C 821.369 293.466 820.305 290.308 820.113 290.116 C 818.473 288.476 818.438 278.949 818.438 276.297 C 818.438 274.531 818.978 270.556 818.019 269.597 C 816.484 268.061 819.136 262.338 817.6 260.803 C 816.205 259.407 818.577 254.242 817.182 252.847 C 815.822 251.487 805.918 252.847 803.781 252.847 C 798.896 252.847 794.01 252.847 789.125 252.847 C 787.626 252.847 784.888 252.476 784.1 253.265 C 782.232 255.133 776.236 253.173 774.468 254.94 C 774.044 255.365 770.947 254.94 770.28 254.94 C 768.762 254.94 762.073 255.191 761.068 256.197 C 760.23 257.034 756.88 255.359 756.043 256.197 C 753.53 258.709 744.736 254.94 742.223 257.453 C 741.526 258.151 738.734 256.755 738.036 257.453 C 737.008 258.48 729.423 259.128 727.986 259.128 C 727.336 259.128 724.217 259.547 724.217 259.547 C 724.217 259.547 728.754 257.104 729.242 256.615 C 732.135 253.723 731.969 248.026 734.686 245.309 C 735.412 244.583 734.882 242.181 735.523 241.54 C 736.5 240.563 735.384 237.492 736.361 236.515 C 738.524 234.351 737.547 229.047 739.711 226.883 C 742.572 224.022 741.875 217.601 744.736 214.739 C 745.377 214.098 744.847 211.697 745.574 210.97 C 748.332 208.211 747.93 201.914 750.599 199.245 C 756.479 193.364 758.166 180.372 764.418 174.12 C 772.929 165.609 777.435 151.89 786.193 143.131 C 786.881 142.444 792.345 133.37 792.056 133.081 C 791.521 132.546 785.446 135.548 784.518 136.012 C 782.442 137.051 779.489 136.435 777.818 138.106 C 777.106 138.818 773.923 137.813 773.212 138.525 C 770.795 140.941 763.39 138.715 761.068 141.037 C 760.579 141.526 758.625 140.549 758.136 141.037 C 755.75 143.424 747.599 141.106 745.155 143.55 C 743.222 145.483 737.424 143.325 735.523 145.225 C 732.119 148.629 718.358 146.9 712.073 146.9"
            >
                <animate
                    attributeName="fill-opacity"
                    values="0;1"
                    dur="0.45s"
                    fill="freeze"
                    begin="-0.01s"
                    keyTimes="0; 1"
                ></animate>
                <animate
                    attributeName="stroke-opacity"
                    values="0;1"
                    dur="0.45s"
                    fill="freeze"
                    keyTimes="0; 1"
                    calcMode="spline"
                    keySplines="0 0 0.94 0.04"
                    begin="-0.02s"
                ></animate>
                <animateTransform
                    type="translate"
                    additive="sum"
                    attributeName="transform"
                    values="-680 -120;-655 -120"
                    dur="0.43s"
                    fill="freeze"
                    keyTimes="0; 1"
                    begin="-0.01s"
                ></animateTransform>
                <animate
                    attributeName="stroke-width"
                    values="0px;1px"
                    dur="0.58s"
                    fill="freeze"
                    keyTimes="0; 1"
                    begin="0.06s"
                ></animate>
            </path>
        </svg>
    );
}

export function LogoSvgStatic({ size = '40px', color = DEFAULT_FILL }) {
    return (
        <svg
            viewBox="0 0 200 200"
            xmlns="http://www.w3.org/2000/svg"
            width={size}
            height={size}
        >
            <path
                vectorEffect={'non-scaling-stroke'}
                strokeWidth="1px"
                strokeOpacity={'0.26'}
                strokeLinejoin="round"
                stroke="rgb(0, 0, 0)"
                fill="rgb(243, 186, 47)"
                fillRule="evenodd"
                paintOrder={'stroke'}
                d="M 714.585 144.388 C 711.939 149.679 712.841 158.275 709.141 161.975 C 707.676 163.441 708.932 167.629 707.466 169.094 C 705.373 171.188 706.629 176.632 704.535 178.726 C 702.232 181.029 703.069 186.473 700.766 188.776 C 698.254 191.289 699.929 197.989 697.416 200.501 C 695.91 202.007 697.838 206.779 696.16 208.458 C 692.69 211.928 694.364 220.304 690.716 223.952 C 688.901 225.767 690.437 230.931 688.622 232.746 C 683.737 237.632 685.132 248.799 680.247 253.684 C 678.711 255.219 679.689 259.268 678.153 260.803 C 673.011 265.945 674.823 278.371 669.778 283.416 C 668.438 284.756 671.261 286.156 671.453 286.347 C 672.449 287.343 677.219 286.766 678.991 286.766 C 685.97 286.766 692.949 286.766 699.929 286.766 C 720.685 286.766 740.691 290.535 762.743 290.535 C 766.678 290.535 771.639 290.954 774.887 290.954 C 776.452 290.954 779.499 290.541 780.331 291.372 C 781.587 292.629 786.193 290.535 787.45 291.791 C 788.658 293 793.397 290.996 794.987 291.791 C 799.35 293.972 808.665 293.048 813.413 293.048 C 814.563 293.048 821.369 293.466 821.369 293.466 C 821.369 293.466 820.305 290.308 820.113 290.116 C 818.473 288.476 818.438 278.949 818.438 276.297 C 818.438 274.531 818.978 270.556 818.019 269.597 C 816.484 268.061 819.136 262.338 817.6 260.803 C 816.205 259.407 818.577 254.242 817.182 252.847 C 815.822 251.487 805.918 252.847 803.781 252.847 C 798.896 252.847 794.01 252.847 789.125 252.847 C 787.626 252.847 784.888 252.476 784.1 253.265 C 782.232 255.133 776.236 253.173 774.468 254.94 C 774.044 255.365 770.947 254.94 770.28 254.94 C 768.762 254.94 762.073 255.191 761.068 256.197 C 760.23 257.034 756.88 255.359 756.043 256.197 C 753.53 258.709 744.736 254.94 742.223 257.453 C 741.526 258.151 738.734 256.755 738.036 257.453 C 737.008 258.48 729.423 259.128 727.986 259.128 C 727.336 259.128 724.217 259.547 724.217 259.547 C 724.217 259.547 728.754 257.104 729.242 256.615 C 732.135 253.723 731.969 248.026 734.686 245.309 C 735.412 244.583 734.882 242.181 735.523 241.54 C 736.5 240.563 735.384 237.492 736.361 236.515 C 738.524 234.351 737.547 229.047 739.711 226.883 C 742.572 224.022 741.875 217.601 744.736 214.739 C 745.377 214.098 744.847 211.697 745.574 210.97 C 748.332 208.211 747.93 201.914 750.599 199.245 C 756.479 193.364 758.166 180.372 764.418 174.12 C 772.929 165.609 777.435 151.89 786.193 143.131 C 786.881 142.444 792.345 133.37 792.056 133.081 C 791.521 132.546 785.446 135.548 784.518 136.012 C 782.442 137.051 779.489 136.435 777.818 138.106 C 777.106 138.818 773.923 137.813 773.212 138.525 C 770.795 140.941 763.39 138.715 761.068 141.037 C 760.579 141.526 758.625 140.549 758.136 141.037 C 755.75 143.424 747.599 141.106 745.155 143.55 C 743.222 145.483 737.424 143.325 735.523 145.225 C 732.119 148.629 718.358 146.9 712.073 146.9"
            >
                <animateTransform
                    type="translate"
                    additive="sum"
                    attributeName="transform"
                    values="-680 -120;-655 -120"
                    dur="0.0s"
                    fill="freeze"
                    keyTimes="0; 1"
                    begin="-0.01s"
                ></animateTransform>
            </path>
        </svg>
    );
}

export function RobotSvg({ size = DEFAULT_SIZES, color = DEFAULT_FILL }) {
    return (
        <svg
            xmlns="http://www.w3.org/2000/svg"
            fill={color}
            width={size}
            height={size}
            viewBox="0 0 16 16"
        >
            <path d="M6 12.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 0 1h-3a.5.5 0 0 1-.5-.5M3 8.062C3 6.76 4.235 5.765 5.53 5.886a26.6 26.6 0 0 0 4.94 0C11.765 5.765 13 6.76 13 8.062v1.157a.93.93 0 0 1-.765.935c-.845.147-2.34.346-4.235.346s-3.39-.2-4.235-.346A.93.93 0 0 1 3 9.219zm4.542-.827a.25.25 0 0 0-.217.068l-.92.9a25 25 0 0 1-1.871-.183.25.25 0 0 0-.068.495c.55.076 1.232.149 2.02.193a.25.25 0 0 0 .189-.071l.754-.736.847 1.71a.25.25 0 0 0 .404.062l.932-.97a25 25 0 0 0 1.922-.188.25.25 0 0 0-.068-.495c-.538.074-1.207.145-1.98.189a.25.25 0 0 0-.166.076l-.754.785-.842-1.7a.25.25 0 0 0-.182-.135" />
            <path d="M8.5 1.866a1 1 0 1 0-1 0V3h-2A4.5 4.5 0 0 0 1 7.5V8a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1v1a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2v-1a1 1 0 0 0 1-1V9a1 1 0 0 0-1-1v-.5A4.5 4.5 0 0 0 10.5 3h-2zM14 7.5V13a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V7.5A3.5 3.5 0 0 1 5.5 4h5A3.5 3.5 0 0 1 14 7.5" />
        </svg>
    );
}

export function DashboardSvg({ size = DEFAULT_SIZES, color = DEFAULT_FILL }) {
    return (
        <svg
            xmlns="http://www.w3.org/2000/svg"
            width={size}
            height={size}
            fill={color}
            viewBox="0 0 16 16"
        >
            <path d="M1 2.5A1.5 1.5 0 0 1 2.5 1h3A1.5 1.5 0 0 1 7 2.5v3A1.5 1.5 0 0 1 5.5 7h-3A1.5 1.5 0 0 1 1 5.5zm8 0A1.5 1.5 0 0 1 10.5 1h3A1.5 1.5 0 0 1 15 2.5v3A1.5 1.5 0 0 1 13.5 7h-3A1.5 1.5 0 0 1 9 5.5zm-8 8A1.5 1.5 0 0 1 2.5 9h3A1.5 1.5 0 0 1 7 10.5v3A1.5 1.5 0 0 1 5.5 15h-3A1.5 1.5 0 0 1 1 13.5zm8 0A1.5 1.5 0 0 1 10.5 9h3a1.5 1.5 0 0 1 1.5 1.5v3a1.5 1.5 0 0 1-1.5 1.5h-3A1.5 1.5 0 0 1 9 13.5z" />
        </svg>
    );
}

export function ShopSvg({ size = DEFAULT_SIZES, color = DEFAULT_FILL }) {
    return (
        <svg
            xmlns="http://www.w3.org/2000/svg"
            width={size}
            height={size}
            fill={color}
            viewBox="0 0 16 16"
        >
            <path d="M5.757 1.071a.5.5 0 0 1 .172.686L3.383 6h9.234L10.07 1.757a.5.5 0 1 1 .858-.514L13.783 6H15a1 1 0 0 1 1 1v1a1 1 0 0 1-1 1v4.5a2.5 2.5 0 0 1-2.5 2.5h-9A2.5 2.5 0 0 1 1 13.5V9a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h1.217L5.07 1.243a.5.5 0 0 1 .686-.172zM2 9v4.5A1.5 1.5 0 0 0 3.5 15h9a1.5 1.5 0 0 0 1.5-1.5V9zM1 7v1h14V7zm3 3a.5.5 0 0 1 .5.5v3a.5.5 0 0 1-1 0v-3A.5.5 0 0 1 4 10m2 0a.5.5 0 0 1 .5.5v3a.5.5 0 0 1-1 0v-3A.5.5 0 0 1 6 10m2 0a.5.5 0 0 1 .5.5v3a.5.5 0 0 1-1 0v-3A.5.5 0 0 1 8 10m2 0a.5.5 0 0 1 .5.5v3a.5.5 0 0 1-1 0v-3a.5.5 0 0 1 .5-.5m2 0a.5.5 0 0 1 .5.5v3a.5.5 0 0 1-1 0v-3a.5.5 0 0 1 .5-.5" />
        </svg>
    );
}

export function AccountSvg({ size = DEFAULT_SIZES, color = DEFAULT_FILL }) {
    return (
        <svg
            xmlns="http://www.w3.org/2000/svg"
            width={size}
            height={size}
            fill={color}
            viewBox="0 0 16 16"
        >
            <path d="M8 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6m2-3a2 2 0 1 1-4 0 2 2 0 0 1 4 0m4 8c0 1-1 1-1 1H3s-1 0-1-1 1-4 6-4 6 3 6 4m-1-.004c-.001-.246-.154-.986-.832-1.664C11.516 10.68 10.289 10 8 10s-3.516.68-4.168 1.332c-.678.678-.83 1.418-.832 1.664z" />
        </svg>
    );
}

export function SettingsSvg({ size = DEFAULT_SIZES, color = DEFAULT_FILL }) {
    return (
        <svg
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 24 24"
            strokeWidth="1.5"
            stroke="currentColor"
            width={size}
            height={size}
        >
            <path
                strokeLinecap="round"
                strokeLinejoin="round"
                d="M10.5 6h9.75M10.5 6a1.5 1.5 0 1 1-3 0m3 0a1.5 1.5 0 1 0-3 0M3.75 6H7.5m3 12h9.75m-9.75 0a1.5 1.5 0 0 1-3 0m3 0a1.5 1.5 0 0 0-3 0m-3.75 0H7.5m9-6h3.75m-3.75 0a1.5 1.5 0 0 1-3 0m3 0a1.5 1.5 0 0 0-3 0m-9.75 0h9.75"
            />
        </svg>
    );
}

export function BybitSvg({
    size,
    width,
    height,
    color = DEFAULT_FILL,
}: {
    width?: string;
    height?: string;
    color?: string;
    size?: string;
}) {
    return (
        <svg
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 3 87 29"
            width={!size ? width : size}
            height={!size ? height : size}
        >
            <path d="M62.008 25.357V3h4.494v22.357z" fill="#f7a600" />
            <g fill="#9C9C9E">
                <path d="M9.634 31.998H0V9.641h9.247c4.494 0 7.112 2.45 7.112 6.28 0 2.48-1.682 4.083-2.846 4.617 1.39.627 3.168 2.04 3.168 5.024 0 4.175-2.94 6.436-7.047 6.436zm-.743-18.463H4.494v5.15H8.89c1.907 0 2.974-1.036 2.974-2.576 0-1.537-1.067-2.574-2.974-2.574zm.29 9.075H4.495v5.496h4.688c2.037 0 3.005-1.256 3.005-2.764 0-1.507-.97-2.732-3.005-2.732zM30.388 22.83v9.168h-4.462V22.83L19.007 9.641h4.882l4.3 9.012 4.235-9.012h4.881zM50.046 31.998h-9.634V9.641h9.246c4.494 0 7.113 2.45 7.113 6.28 0 2.48-1.682 4.083-2.846 4.617 1.39.627 3.168 2.04 3.168 5.024 0 4.175-2.94 6.436-7.047 6.436zm-.743-18.463h-4.397v5.15h4.397c1.907 0 2.974-1.036 2.974-2.576 0-1.537-1.067-2.574-2.974-2.574zm.29 9.075h-4.688v5.496h4.688c2.038 0 3.006-1.256 3.006-2.764 0-1.507-.968-2.732-3.006-2.732zM80.986 13.536V32h-4.494V13.535H70.48V9.641h16.52v3.894z" />
            </g>
        </svg>
    );
}

export function BinanceSvg(props: any, className: any) {
    return (
        <svg
            viewBox="0 0 633.04 126.61"
            xmlns="http://www.w3.org/2000/svg"
            className={className}
            {...props}
        >
            <g fill="#f3ba2f">
                <path d="m38.72 53.2 24.59-24.58 24.6 24.6 14.3-14.31-38.9-38.91-38.9 38.9z" />
                <path
                    d="m3.64 53.19h20.23v20.23h-20.23z"
                    transform="matrix(.70710678 -.70710678 .70710678 .70710678 -40.19 28.27)"
                />
                <path d="m38.72 73.41 24.59 24.59 24.6-24.6 14.31 14.29-.01.01-38.9 38.91-38.9-38.89-.02-.02z" />
                <path
                    d="m101.64 53.19h20.23v20.23h-20.23z"
                    transform="matrix(.70710678 -.70710678 .70710678 .70710678 -11.49 97.57)"
                />
                <path d="m77.82 63.3-14.51-14.52-10.73 10.73-1.24 1.23-2.54 2.54-.02.02.02.03 14.51 14.5 14.51-14.52.01-.01z" />
                <g transform="translate(.55)">
                    <path d="m148.37 30.68h31.12q11.58 0 17.52 6a15.5 15.5 0 0 1 4.59 11.32v.19a16.67 16.67 0 0 1 -.71 5.08 15.6 15.6 0 0 1 -1.91 4 14.77 14.77 0 0 1 -2.76 3.12 17.92 17.92 0 0 1 -3.39 2.3 22.66 22.66 0 0 1 9.17 6q3.34 3.8 3.34 10.5v.19a17.44 17.44 0 0 1 -1.77 8.06 15.72 15.72 0 0 1 -5.07 5.76 24.05 24.05 0 0 1 -7.95 3.45 42.7 42.7 0 0 1 -10.29 1.15h-31.89zm28 27.14a15.39 15.39 0 0 0 7.77-1.68 5.8 5.8 0 0 0 2.86-5.42v-.19a5.93 5.93 0 0 0 -2.49-5.13q-2.49-1.77-7.19-1.77h-14.56v14.19zm3.93 27.05a14.2 14.2 0 0 0 7.7-1.77 6.08 6.08 0 0 0 2.78-5.52v-.19a6.31 6.31 0 0 0 -2.59-5.32q-2.58-2-8.34-2h-17.09v14.8z" />
                    <path d="m223.88 30.68h14.77v67.14h-14.77z" />
                    <path d="m261 30.68h13.62l31.48 41.32v-41.32h14.58v67.14h-12.57l-32.51-42.68v42.68h-14.6z" />
                    <path d="m365.4 30.2h13.6l28.77 67.62h-15.42l-6.14-15.06h-28.39l-6.14 15.06h-15.06zm15.54 39.52-8.94-21.78-8.9 21.78z" />
                    <path d="m423.74 30.68h13.62l31.46 41.32v-41.32h14.58v67.14h-12.57l-32.51-42.68v42.68h-14.58z" />
                    <path d="m536.56 99a34.93 34.93 0 0 1 -13.72-2.68 33.17 33.17 0 0 1 -18.13-18.32 35.54 35.54 0 0 1 -2.59-13.53v-.19a34.84 34.84 0 0 1 9.79-24.51 33.23 33.23 0 0 1 11-7.48 35.9 35.9 0 0 1 14.19-2.73 44.49 44.49 0 0 1 8.58.77 35.66 35.66 0 0 1 7.06 2.11 30.5 30.5 0 0 1 5.85 3.26 39.52 39.52 0 0 1 5 4.22l-9.39 10.84a35.71 35.71 0 0 0 -8-5.57 20.47 20.47 0 0 0 -9.16-2 18.58 18.58 0 0 0 -14 6.14 21.09 21.09 0 0 0 -4.04 6.67 22.87 22.87 0 0 0 -1.43 8.11v.19a23.21 23.21 0 0 0 1.43 8.1 21.32 21.32 0 0 0 4 6.71 18.46 18.46 0 0 0 14 6.24 20.52 20.52 0 0 0 9.73-2.11 37.62 37.62 0 0 0 7.91-5.76l9.4 9.5a47.93 47.93 0 0 1 -5.37 5 32 32 0 0 1 -6.09 3.79 31.56 31.56 0 0 1 -7.24 2.39 43.11 43.11 0 0 1 -8.78.84z" />
                    <path d="m581.47 30.68h50.53v13.14h-36v13.62h31.7v13.14h-31.65v14.1h36.45v13.14h-51z" />
                </g>
            </g>
        </svg>
    );
}
